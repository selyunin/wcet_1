******************************************************************************
--- FP - Interpolate test (16 bit)                                         ---
******************************************************************************
x[ 0] =      0 , x[ 2] =  12288 ==> x[ 1] =   6144
x[ 2] =  12288 , x[ 5] =  -4096 ==> x[ 3] =   6827
x[ 2] =  12288 , x[ 5] =  -4096 ==> x[ 4] =   1366
x[ 5] =  -4096 , x[ 9] =  16384 ==> x[ 6] =   1024
x[ 5] =  -4096 , x[ 9] =  16384 ==> x[ 7] =   6144
x[ 5] =  -4096 , x[ 9] =  16384 ==> x[ 8] =  11264
******************************************************************************
--- Sample Buffer Test                                                     ---
******************************************************************************
Size of sample buffer: 128
Initial Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: -2147483648
^  ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
|  ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 

Adding 64 samples (values from 0 to 1024, every 5^th value non-missing)
0
-32768
32
-32768
64
-32768
96
-32768
128
-32768
160
-32768
192
-32768
224
-32768
256
-32768
288
-32768
320
-32768
352
-32768
384
-32768
416
-32768
448
-32768
480
-32768
512
-32768
544
-32768
576
-32768
608
-32768
640
-32768
672
-32768
704
-32768
736
-32768
768
-32768
800
-32768
832
-32768
864
-32768
896
-32768
928
-32768
960
-32768
992
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 31
cnt_inner_loop = 31
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
|     0     16     32     48     64     80     96    112    128    144    160    176    192    208    224    240
    256    272    288    304    320    336    352    368    384    400    416    432    448    464    480    496
    512    528    544    560    576    592    608    624    640    656    672    688    704    720    736    752
    768    784    800    816    832    848    864    880    896    912    928    944    960    976    992   ... 
^  ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 
   ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ... 

Adding 64 samples (values from 1024 to 2048, every 5^th value non-missing)
1024
-32768
1056
-32768
1088
-32768
1120
-32768
1152
-32768
1184
-32768
1216
-32768
1248
-32768
1280
-32768
1312
-32768
1344
-32768
1376
-32768
1408
-32768
1440
-32768
1472
-32768
1504
-32768
1536
-32768
1568
-32768
1600
-32768
1632
-32768
1664
-32768
1696
-32768
1728
-32768
1760
-32768
1792
-32768
1824
-32768
1856
-32768
1888
-32768
1920
-32768
1952
-32768
1984
-32768
2016
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^     0     16     32     48     64     80     96    112    128    144    160    176    192    208    224    240
    256    272    288    304    320    336    352    368    384    400    416    432    448    464    480    496
    512    528    544    560    576    592    608    624    640    656    672    688    704    720    736    752
    768    784    800    816    832    848    864    880    896    912    928    944    960    976    992   1008
|  1024   1040   1056   1072   1088   1104   1120   1136   1152   1168   1184   1200   1216   1232   1248   1264
   1280   1296   1312   1328   1344   1360   1376   1392   1408   1424   1440   1456   1472   1488   1504   1520
   1536   1552   1568   1584   1600   1616   1632   1648   1664   1680   1696   1712   1728   1744   1760   1776
   1792   1808   1824   1840   1856   1872   1888   1904   1920   1936   1952   1968   1984   2000   2016   ... 

Adding 64 samples (values from 2048 to 3072, every 5^th value non-missing)
2048
-32768
2080
-32768
2112
-32768
2144
-32768
2176
-32768
2208
-32768
2240
-32768
2272
-32768
2304
-32768
2336
-32768
2368
-32768
2400
-32768
2432
-32768
2464
-32768
2496
-32768
2528
-32768
2560
-32768
2592
-32768
2624
-32768
2656
-32768
2688
-32768
2720
-32768
2752
-32768
2784
-32768
2816
-32768
2848
-32768
2880
-32768
2912
-32768
2944
-32768
2976
-32768
3008
-32768
3040
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
|  2048   2064   2080   2096   2112   2128   2144   2160   2176   2192   2208   2224   2240   2256   2272   2288
   2304   2320   2336   2352   2368   2384   2400   2416   2432   2448   2464   2480   2496   2512   2528   2544
   2560   2576   2592   2608   2624   2640   2656   2672   2688   2704   2720   2736   2752   2768   2784   2800
   2816   2832   2848   2864   2880   2896   2912   2928   2944   2960   2976   2992   3008   3024   3040   ... 
^  1024   1040   1056   1072   1088   1104   1120   1136   1152   1168   1184   1200   1216   1232   1248   1264
   1280   1296   1312   1328   1344   1360   1376   1392   1408   1424   1440   1456   1472   1488   1504   1520
   1536   1552   1568   1584   1600   1616   1632   1648   1664   1680   1696   1712   1728   1744   1760   1776
   1792   1808   1824   1840   1856   1872   1888   1904   1920   1936   1952   1968   1984   2000   2016   2032

Adding 64 samples (values from 3072 to 4096, every 5^th value non-missing)
3072
-32768
3104
-32768
3136
-32768
3168
-32768
3200
-32768
3232
-32768
3264
-32768
3296
-32768
3328
-32768
3360
-32768
3392
-32768
3424
-32768
3456
-32768
3488
-32768
3520
-32768
3552
-32768
3584
-32768
3616
-32768
3648
-32768
3680
-32768
3712
-32768
3744
-32768
3776
-32768
3808
-32768
3840
-32768
3872
-32768
3904
-32768
3936
-32768
3968
-32768
4000
-32768
4032
-32768
4064
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^  2048   2064   2080   2096   2112   2128   2144   2160   2176   2192   2208   2224   2240   2256   2272   2288
   2304   2320   2336   2352   2368   2384   2400   2416   2432   2448   2464   2480   2496   2512   2528   2544
   2560   2576   2592   2608   2624   2640   2656   2672   2688   2704   2720   2736   2752   2768   2784   2800
   2816   2832   2848   2864   2880   2896   2912   2928   2944   2960   2976   2992   3008   3024   3040   3056
|  3072   3088   3104   3120   3136   3152   3168   3184   3200   3216   3232   3248   3264   3280   3296   3312
   3328   3344   3360   3376   3392   3408   3424   3440   3456   3472   3488   3504   3520   3536   3552   3568
   3584   3600   3616   3632   3648   3664   3680   3696   3712   3728   3744   3760   3776   3792   3808   3824
   3840   3856   3872   3888   3904   3920   3936   3952   3968   3984   4000   4016   4032   4048   4064   ... 

Adding 64 samples (values from 4096 to 5120, every 5^th value non-missing)
4096
-32768
4128
-32768
4160
-32768
4192
-32768
4224
-32768
4256
-32768
4288
-32768
4320
-32768
4352
-32768
4384
-32768
4416
-32768
4448
-32768
4480
-32768
4512
-32768
4544
-32768
4576
-32768
4608
-32768
4640
-32768
4672
-32768
4704
-32768
4736
-32768
4768
-32768
4800
-32768
4832
-32768
4864
-32768
4896
-32768
4928
-32768
4960
-32768
4992
-32768
5024
-32768
5056
-32768
5088
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
|  4096   4112   4128   4144   4160   4176   4192   4208   4224   4240   4256   4272   4288   4304   4320   4336
   4352   4368   4384   4400   4416   4432   4448   4464   4480   4496   4512   4528   4544   4560   4576   4592
   4608   4624   4640   4656   4672   4688   4704   4720   4736   4752   4768   4784   4800   4816   4832   4848
   4864   4880   4896   4912   4928   4944   4960   4976   4992   5008   5024   5040   5056   5072   5088   ... 
^  3072   3088   3104   3120   3136   3152   3168   3184   3200   3216   3232   3248   3264   3280   3296   3312
   3328   3344   3360   3376   3392   3408   3424   3440   3456   3472   3488   3504   3520   3536   3552   3568
   3584   3600   3616   3632   3648   3664   3680   3696   3712   3728   3744   3760   3776   3792   3808   3824
   3840   3856   3872   3888   3904   3920   3936   3952   3968   3984   4000   4016   4032   4048   4064   4080

Adding 64 samples (values from 5120 to 6144, every 5^th value non-missing)
5120
-32768
5152
-32768
5184
-32768
5216
-32768
5248
-32768
5280
-32768
5312
-32768
5344
-32768
5376
-32768
5408
-32768
5440
-32768
5472
-32768
5504
-32768
5536
-32768
5568
-32768
5600
-32768
5632
-32768
5664
-32768
5696
-32768
5728
-32768
5760
-32768
5792
-32768
5824
-32768
5856
-32768
5888
-32768
5920
-32768
5952
-32768
5984
-32768
6016
-32768
6048
-32768
6080
-32768
6112
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^  4096   4112   4128   4144   4160   4176   4192   4208   4224   4240   4256   4272   4288   4304   4320   4336
   4352   4368   4384   4400   4416   4432   4448   4464   4480   4496   4512   4528   4544   4560   4576   4592
   4608   4624   4640   4656   4672   4688   4704   4720   4736   4752   4768   4784   4800   4816   4832   4848
   4864   4880   4896   4912   4928   4944   4960   4976   4992   5008   5024   5040   5056   5072   5088   5104
|  5120   5136   5152   5168   5184   5200   5216   5232   5248   5264   5280   5296   5312   5328   5344   5360
   5376   5392   5408   5424   5440   5456   5472   5488   5504   5520   5536   5552   5568   5584   5600   5616
   5632   5648   5664   5680   5696   5712   5728   5744   5760   5776   5792   5808   5824   5840   5856   5872
   5888   5904   5920   5936   5952   5968   5984   6000   6016   6032   6048   6064   6080   6096   6112   ... 

Adding 64 samples (values from 6144 to 7168, every 5^th value non-missing)
6144
-32768
6176
-32768
6208
-32768
6240
-32768
6272
-32768
6304
-32768
6336
-32768
6368
-32768
6400
-32768
6432
-32768
6464
-32768
6496
-32768
6528
-32768
6560
-32768
6592
-32768
6624
-32768
6656
-32768
6688
-32768
6720
-32768
6752
-32768
6784
-32768
6816
-32768
6848
-32768
6880
-32768
6912
-32768
6944
-32768
6976
-32768
7008
-32768
7040
-32768
7072
-32768
7104
-32768
7136
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
|  6144   6160   6176   6192   6208   6224   6240   6256   6272   6288   6304   6320   6336   6352   6368   6384
   6400   6416   6432   6448   6464   6480   6496   6512   6528   6544   6560   6576   6592   6608   6624   6640
   6656   6672   6688   6704   6720   6736   6752   6768   6784   6800   6816   6832   6848   6864   6880   6896
   6912   6928   6944   6960   6976   6992   7008   7024   7040   7056   7072   7088   7104   7120   7136   ... 
^  5120   5136   5152   5168   5184   5200   5216   5232   5248   5264   5280   5296   5312   5328   5344   5360
   5376   5392   5408   5424   5440   5456   5472   5488   5504   5520   5536   5552   5568   5584   5600   5616
   5632   5648   5664   5680   5696   5712   5728   5744   5760   5776   5792   5808   5824   5840   5856   5872
   5888   5904   5920   5936   5952   5968   5984   6000   6016   6032   6048   6064   6080   6096   6112   6128

Adding 64 samples (values from 7168 to 8192, every 5^th value non-missing)
7168
-32768
7200
-32768
7232
-32768
7264
-32768
7296
-32768
7328
-32768
7360
-32768
7392
-32768
7424
-32768
7456
-32768
7488
-32768
7520
-32768
7552
-32768
7584
-32768
7616
-32768
7648
-32768
7680
-32768
7712
-32768
7744
-32768
7776
-32768
7808
-32768
7840
-32768
7872
-32768
7904
-32768
7936
-32768
7968
-32768
8000
-32768
8032
-32768
8064
-32768
8096
-32768
8128
-32768
8160
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^  6144   6160   6176   6192   6208   6224   6240   6256   6272   6288   6304   6320   6336   6352   6368   6384
   6400   6416   6432   6448   6464   6480   6496   6512   6528   6544   6560   6576   6592   6608   6624   6640
   6656   6672   6688   6704   6720   6736   6752   6768   6784   6800   6816   6832   6848   6864   6880   6896
   6912   6928   6944   6960   6976   6992   7008   7024   7040   7056   7072   7088   7104   7120   7136   7152
|  7168   7184   7200   7216   7232   7248   7264   7280   7296   7312   7328   7344   7360   7376   7392   7408
   7424   7440   7456   7472   7488   7504   7520   7536   7552   7568   7584   7600   7616   7632   7648   7664
   7680   7696   7712   7728   7744   7760   7776   7792   7808   7824   7840   7856   7872   7888   7904   7920
   7936   7952   7968   7984   8000   8016   8032   8048   8064   8080   8096   8112   8128   8144   8160   ... 

Adding 64 samples (values from 8192 to 9216, every 5^th value non-missing)
8192
-32768
8224
-32768
8256
-32768
8288
-32768
8320
-32768
8352
-32768
8384
-32768
8416
-32768
8448
-32768
8480
-32768
8512
-32768
8544
-32768
8576
-32768
8608
-32768
8640
-32768
8672
-32768
8704
-32768
8736
-32768
8768
-32768
8800
-32768
8832
-32768
8864
-32768
8896
-32768
8928
-32768
8960
-32768
8992
-32768
9024
-32768
9056
-32768
9088
-32768
9120
-32768
9152
-32768
9184
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
|  8192   8208   8224   8240   8256   8272   8288   8304   8320   8336   8352   8368   8384   8400   8416   8432
   8448   8464   8480   8496   8512   8528   8544   8560   8576   8592   8608   8624   8640   8656   8672   8688
   8704   8720   8736   8752   8768   8784   8800   8816   8832   8848   8864   8880   8896   8912   8928   8944
   8960   8976   8992   9008   9024   9040   9056   9072   9088   9104   9120   9136   9152   9168   9184   ... 
^  7168   7184   7200   7216   7232   7248   7264   7280   7296   7312   7328   7344   7360   7376   7392   7408
   7424   7440   7456   7472   7488   7504   7520   7536   7552   7568   7584   7600   7616   7632   7648   7664
   7680   7696   7712   7728   7744   7760   7776   7792   7808   7824   7840   7856   7872   7888   7904   7920
   7936   7952   7968   7984   8000   8016   8032   8048   8064   8080   8096   8112   8128   8144   8160   8176

Adding 64 samples (values from 9216 to 10240, every 5^th value non-missing)
9216
-32768
9248
-32768
9280
-32768
9312
-32768
9344
-32768
9376
-32768
9408
-32768
9440
-32768
9472
-32768
9504
-32768
9536
-32768
9568
-32768
9600
-32768
9632
-32768
9664
-32768
9696
-32768
9728
-32768
9760
-32768
9792
-32768
9824
-32768
9856
-32768
9888
-32768
9920
-32768
9952
-32768
9984
-32768
10016
-32768
10048
-32768
10080
-32768
10112
-32768
10144
-32768
10176
-32768
10208
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^  8192   8208   8224   8240   8256   8272   8288   8304   8320   8336   8352   8368   8384   8400   8416   8432
   8448   8464   8480   8496   8512   8528   8544   8560   8576   8592   8608   8624   8640   8656   8672   8688
   8704   8720   8736   8752   8768   8784   8800   8816   8832   8848   8864   8880   8896   8912   8928   8944
   8960   8976   8992   9008   9024   9040   9056   9072   9088   9104   9120   9136   9152   9168   9184   9200
|  9216   9232   9248   9264   9280   9296   9312   9328   9344   9360   9376   9392   9408   9424   9440   9456
   9472   9488   9504   9520   9536   9552   9568   9584   9600   9616   9632   9648   9664   9680   9696   9712
   9728   9744   9760   9776   9792   9808   9824   9840   9856   9872   9888   9904   9920   9936   9952   9968
   9984  10000  10016  10032  10048  10064  10080  10096  10112  10128  10144  10160  10176  10192  10208   ... 

Adding 64 samples (values from 10240 to 11264, every 5^th value non-missing)
10240
-32768
10272
-32768
10304
-32768
10336
-32768
10368
-32768
10400
-32768
10432
-32768
10464
-32768
10496
-32768
10528
-32768
10560
-32768
10592
-32768
10624
-32768
10656
-32768
10688
-32768
10720
-32768
10752
-32768
10784
-32768
10816
-32768
10848
-32768
10880
-32768
10912
-32768
10944
-32768
10976
-32768
11008
-32768
11040
-32768
11072
-32768
11104
-32768
11136
-32768
11168
-32768
11200
-32768
11232
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
| 10240  10256  10272  10288  10304  10320  10336  10352  10368  10384  10400  10416  10432  10448  10464  10480
  10496  10512  10528  10544  10560  10576  10592  10608  10624  10640  10656  10672  10688  10704  10720  10736
  10752  10768  10784  10800  10816  10832  10848  10864  10880  10896  10912  10928  10944  10960  10976  10992
  11008  11024  11040  11056  11072  11088  11104  11120  11136  11152  11168  11184  11200  11216  11232   ... 
^  9216   9232   9248   9264   9280   9296   9312   9328   9344   9360   9376   9392   9408   9424   9440   9456
   9472   9488   9504   9520   9536   9552   9568   9584   9600   9616   9632   9648   9664   9680   9696   9712
   9728   9744   9760   9776   9792   9808   9824   9840   9856   9872   9888   9904   9920   9936   9952   9968
   9984  10000  10016  10032  10048  10064  10080  10096  10112  10128  10144  10160  10176  10192  10208  10224

Adding 64 samples (values from 11264 to 12288, every 5^th value non-missing)
11264
-32768
11296
-32768
11328
-32768
11360
-32768
11392
-32768
11424
-32768
11456
-32768
11488
-32768
11520
-32768
11552
-32768
11584
-32768
11616
-32768
11648
-32768
11680
-32768
11712
-32768
11744
-32768
11776
-32768
11808
-32768
11840
-32768
11872
-32768
11904
-32768
11936
-32768
11968
-32768
12000
-32768
12032
-32768
12064
-32768
12096
-32768
12128
-32768
12160
-32768
12192
-32768
12224
-32768
12256
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^ 10240  10256  10272  10288  10304  10320  10336  10352  10368  10384  10400  10416  10432  10448  10464  10480
  10496  10512  10528  10544  10560  10576  10592  10608  10624  10640  10656  10672  10688  10704  10720  10736
  10752  10768  10784  10800  10816  10832  10848  10864  10880  10896  10912  10928  10944  10960  10976  10992
  11008  11024  11040  11056  11072  11088  11104  11120  11136  11152  11168  11184  11200  11216  11232  11248
| 11264  11280  11296  11312  11328  11344  11360  11376  11392  11408  11424  11440  11456  11472  11488  11504
  11520  11536  11552  11568  11584  11600  11616  11632  11648  11664  11680  11696  11712  11728  11744  11760
  11776  11792  11808  11824  11840  11856  11872  11888  11904  11920  11936  11952  11968  11984  12000  12016
  12032  12048  12064  12080  12096  12112  12128  12144  12160  12176  12192  12208  12224  12240  12256   ... 

Adding 64 samples (values from 12288 to 13312, every 5^th value non-missing)
12288
-32768
12320
-32768
12352
-32768
12384
-32768
12416
-32768
12448
-32768
12480
-32768
12512
-32768
12544
-32768
12576
-32768
12608
-32768
12640
-32768
12672
-32768
12704
-32768
12736
-32768
12768
-32768
12800
-32768
12832
-32768
12864
-32768
12896
-32768
12928
-32768
12960
-32768
12992
-32768
13024
-32768
13056
-32768
13088
-32768
13120
-32768
13152
-32768
13184
-32768
13216
-32768
13248
-32768
13280
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
| 12288  12304  12320  12336  12352  12368  12384  12400  12416  12432  12448  12464  12480  12496  12512  12528
  12544  12560  12576  12592  12608  12624  12640  12656  12672  12688  12704  12720  12736  12752  12768  12784
  12800  12816  12832  12848  12864  12880  12896  12912  12928  12944  12960  12976  12992  13008  13024  13040
  13056  13072  13088  13104  13120  13136  13152  13168  13184  13200  13216  13232  13248  13264  13280   ... 
^ 11264  11280  11296  11312  11328  11344  11360  11376  11392  11408  11424  11440  11456  11472  11488  11504
  11520  11536  11552  11568  11584  11600  11616  11632  11648  11664  11680  11696  11712  11728  11744  11760
  11776  11792  11808  11824  11840  11856  11872  11888  11904  11920  11936  11952  11968  11984  12000  12016
  12032  12048  12064  12080  12096  12112  12128  12144  12160  12176  12192  12208  12224  12240  12256  12272

Adding 64 samples (values from 13312 to 14336, every 5^th value non-missing)
13312
-32768
13344
-32768
13376
-32768
13408
-32768
13440
-32768
13472
-32768
13504
-32768
13536
-32768
13568
-32768
13600
-32768
13632
-32768
13664
-32768
13696
-32768
13728
-32768
13760
-32768
13792
-32768
13824
-32768
13856
-32768
13888
-32768
13920
-32768
13952
-32768
13984
-32768
14016
-32768
14048
-32768
14080
-32768
14112
-32768
14144
-32768
14176
-32768
14208
-32768
14240
-32768
14272
-32768
14304
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^ 12288  12304  12320  12336  12352  12368  12384  12400  12416  12432  12448  12464  12480  12496  12512  12528
  12544  12560  12576  12592  12608  12624  12640  12656  12672  12688  12704  12720  12736  12752  12768  12784
  12800  12816  12832  12848  12864  12880  12896  12912  12928  12944  12960  12976  12992  13008  13024  13040
  13056  13072  13088  13104  13120  13136  13152  13168  13184  13200  13216  13232  13248  13264  13280  13296
| 13312  13328  13344  13360  13376  13392  13408  13424  13440  13456  13472  13488  13504  13520  13536  13552
  13568  13584  13600  13616  13632  13648  13664  13680  13696  13712  13728  13744  13760  13776  13792  13808
  13824  13840  13856  13872  13888  13904  13920  13936  13952  13968  13984  14000  14016  14032  14048  14064
  14080  14096  14112  14128  14144  14160  14176  14192  14208  14224  14240  14256  14272  14288  14304   ... 

Adding 64 samples (values from 14336 to 15360, every 5^th value non-missing)
14336
-32768
14368
-32768
14400
-32768
14432
-32768
14464
-32768
14496
-32768
14528
-32768
14560
-32768
14592
-32768
14624
-32768
14656
-32768
14688
-32768
14720
-32768
14752
-32768
14784
-32768
14816
-32768
14848
-32768
14880
-32768
14912
-32768
14944
-32768
14976
-32768
15008
-32768
15040
-32768
15072
-32768
15104
-32768
15136
-32768
15168
-32768
15200
-32768
15232
-32768
15264
-32768
15296
-32768
15328
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
| 14336  14352  14368  14384  14400  14416  14432  14448  14464  14480  14496  14512  14528  14544  14560  14576
  14592  14608  14624  14640  14656  14672  14688  14704  14720  14736  14752  14768  14784  14800  14816  14832
  14848  14864  14880  14896  14912  14928  14944  14960  14976  14992  15008  15024  15040  15056  15072  15088
  15104  15120  15136  15152  15168  15184  15200  15216  15232  15248  15264  15280  15296  15312  15328   ... 
^ 13312  13328  13344  13360  13376  13392  13408  13424  13440  13456  13472  13488  13504  13520  13536  13552
  13568  13584  13600  13616  13632  13648  13664  13680  13696  13712  13728  13744  13760  13776  13792  13808
  13824  13840  13856  13872  13888  13904  13920  13936  13952  13968  13984  14000  14016  14032  14048  14064
  14080  14096  14112  14128  14144  14160  14176  14192  14208  14224  14240  14256  14272  14288  14304  14320

Adding 64 samples (values from 15360 to 16384, every 5^th value non-missing)
15360
-32768
15392
-32768
15424
-32768
15456
-32768
15488
-32768
15520
-32768
15552
-32768
15584
-32768
15616
-32768
15648
-32768
15680
-32768
15712
-32768
15744
-32768
15776
-32768
15808
-32768
15840
-32768
15872
-32768
15904
-32768
15936
-32768
15968
-32768
16000
-32768
16032
-32768
16064
-32768
16096
-32768
16128
-32768
16160
-32768
16192
-32768
16224
-32768
16256
-32768
16288
-32768
16320
-32768
16352
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 126
^ 14336  14352  14368  14384  14400  14416  14432  14448  14464  14480  14496  14512  14528  14544  14560  14576
  14592  14608  14624  14640  14656  14672  14688  14704  14720  14736  14752  14768  14784  14800  14816  14832
  14848  14864  14880  14896  14912  14928  14944  14960  14976  14992  15008  15024  15040  15056  15072  15088
  15104  15120  15136  15152  15168  15184  15200  15216  15232  15248  15264  15280  15296  15312  15328  15344
| 15360  15376  15392  15408  15424  15440  15456  15472  15488  15504  15520  15536  15552  15568  15584  15600
  15616  15632  15648  15664  15680  15696  15712  15728  15744  15760  15776  15792  15808  15824  15840  15856
  15872  15888  15904  15920  15936  15952  15968  15984  16000  16016  16032  16048  16064  16080  16096  16112
  16128  16144  16160  16176  16192  16208  16224  16240  16256  16272  16288  16304  16320  16336  16352   ... 

Adding 64 samples (values from 16384 to 17408, every 5^th value non-missing)
16384
-32768
16416
-32768
16448
-32768
16480
-32768
16512
-32768
16544
-32768
16576
-32768
16608
-32768
16640
-32768
16672
-32768
16704
-32768
16736
-32768
16768
-32768
16800
-32768
16832
-32768
16864
-32768
16896
-32768
16928
-32768
16960
-32768
16992
-32768
17024
-32768
17056
-32768
17088
-32768
17120
-32768
17152
-32768
17184
-32768
17216
-32768
17248
-32768
17280
-32768
17312
-32768
17344
-32768
17376
-32768

cnt_outer_loop = 64
cnt_first_condition = 32
cnt_second_condition = 32
cnt_inner_loop = 32
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 62
| 16384  16400  16416  16432  16448  16464  16480  16496  16512  16528  16544  16560  16576  16592  16608  16624
  16640  16656  16672  16688  16704  16720  16736  16752  16768  16784  16800  16816  16832  16848  16864  16880
  16896  16912  16928  16944  16960  16976  16992  17008  17024  17040  17056  17072  17088  17104  17120  17136
  17152  17168  17184  17200  17216  17232  17248  17264  17280  17296  17312  17328  17344  17360  17376   ... 
^ 15360  15376  15392  15408  15424  15440  15456  15472  15488  15504  15520  15536  15552  15568  15584  15600
  15616  15632  15648  15664  15680  15696  15712  15728  15744  15760  15776  15792  15808  15824  15840  15856
  15872  15888  15904  15920  15936  15952  15968  15984  16000  16016  16032  16048  16064  16080  16096  16112
  16128  16144  16160  16176  16192  16208  16224  16240  16256  16272  16288  16304  16320  16336  16352  16368

Adding 64 samples (values from 17408 to 18432)
17408
17424
17440
17456
17472
17488
17504
17520
17536
17552
17568
17584
17600
17616
17632
17648
17664
17680
17696
17712
17728
17744
17760
17776
17792
17808
17824
17840
17856
17872
17888
17904
17920
17936
17952
17968
17984
18000
18016
18032
18048
18064
18080
18096
18112
18128
18144
18160
18176
18192
18208
18224
18240
18256
18272
18288
18304
18320
18336
18352
18368
18384
18400
18416

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 1
cnt_inner_loop = 1
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 127
^ 16384  16400  16416  16432  16448  16464  16480  16496  16512  16528  16544  16560  16576  16592  16608  16624
  16640  16656  16672  16688  16704  16720  16736  16752  16768  16784  16800  16816  16832  16848  16864  16880
  16896  16912  16928  16944  16960  16976  16992  17008  17024  17040  17056  17072  17088  17104  17120  17136
  17152  17168  17184  17200  17216  17232  17248  17264  17280  17296  17312  17328  17344  17360  17376  17392
| 17408  17424  17440  17456  17472  17488  17504  17520  17536  17552  17568  17584  17600  17616  17632  17648
  17664  17680  17696  17712  17728  17744  17760  17776  17792  17808  17824  17840  17856  17872  17888  17904
  17920  17936  17952  17968  17984  18000  18016  18032  18048  18064  18080  18096  18112  18128  18144  18160
  18176  18192  18208  18224  18240  18256  18272  18288  18304  18320  18336  18352  18368  18384  18400  18416

Adding 64 samples (values from 18432 to 19456)
18432
18448
18464
18480
18496
18512
18528
18544
18560
18576
18592
18608
18624
18640
18656
18672
18688
18704
18720
18736
18752
18768
18784
18800
18816
18832
18848
18864
18880
18896
18912
18928
18944
18960
18976
18992
19008
19024
19040
19056
19072
19088
19104
19120
19136
19152
19168
19184
19200
19216
19232
19248
19264
19280
19296
19312
19328
19344
19360
19376
19392
19408
19424
19440

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 64, valid: 63
| 18432  18448  18464  18480  18496  18512  18528  18544  18560  18576  18592  18608  18624  18640  18656  18672
  18688  18704  18720  18736  18752  18768  18784  18800  18816  18832  18848  18864  18880  18896  18912  18928
  18944  18960  18976  18992  19008  19024  19040  19056  19072  19088  19104  19120  19136  19152  19168  19184
  19200  19216  19232  19248  19264  19280  19296  19312  19328  19344  19360  19376  19392  19408  19424  19440
^ 17408  17424  17440  17456  17472  17488  17504  17520  17536  17552  17568  17584  17600  17616  17632  17648
  17664  17680  17696  17712  17728  17744  17760  17776  17792  17808  17824  17840  17856  17872  17888  17904
  17920  17936  17952  17968  17984  18000  18016  18032  18048  18064  18080  18096  18112  18128  18144  18160
  18176  18192  18208  18224  18240  18256  18272  18288  18304  18320  18336  18352  18368  18384  18400  18416

Adding 64 samples (values from 19456 to 20480)
19456
19472
19488
19504
19520
19536
19552
19568
19584
19600
19616
19632
19648
19664
19680
19696
19712
19728
19744
19760
19776
19792
19808
19824
19840
19856
19872
19888
19904
19920
19936
19952
19968
19984
20000
20016
20032
20048
20064
20080
20096
20112
20128
20144
20160
20176
20192
20208
20224
20240
20256
20272
20288
20304
20320
20336
20352
20368
20384
20400
20416
20432
20448
20464

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Sample Buffer
 SAMPLE BUFFER pointer: 0, valid: 127
^ 18432  18448  18464  18480  18496  18512  18528  18544  18560  18576  18592  18608  18624  18640  18656  18672
  18688  18704  18720  18736  18752  18768  18784  18800  18816  18832  18848  18864  18880  18896  18912  18928
  18944  18960  18976  18992  19008  19024  19040  19056  19072  19088  19104  19120  19136  19152  19168  19184
  19200  19216  19232  19248  19264  19280  19296  19312  19328  19344  19360  19376  19392  19408  19424  19440
| 19456  19472  19488  19504  19520  19536  19552  19568  19584  19600  19616  19632  19648  19664  19680  19696
  19712  19728  19744  19760  19776  19792  19808  19824  19840  19856  19872  19888  19904  19920  19936  19952
  19968  19984  20000  20016  20032  20048  20064  20080  20096  20112  20128  20144  20160  20176  20192  20208
  20224  20240  20256  20272  20288  20304  20320  20336  20352  20368  20384  20400  20416  20432  20448  20464

******************************************************************************
--- FP - FFT Test                                                          ---
******************************************************************************
-32768
1498
3890
3745
4340
4569
5072
4115
4874
3941
1214
-282
242
-1102
-3112
-2937
-3570
-2791
-32768
-1437
-1536
-346
1860
2280
4675
4300
5051
6057
4157
4836
2282
1855
1553
4
-771
-2167
-3439
-32768
-3527
-2862
-2853
-1870
-32768
2183
2859
2726
4945
5932
4872
3965
4493
4048
3014
2145
-428
-896
-1257
-2808
-2899
-2662
-3261
-1577
-32768
353

cnt_outer_loop = 64
cnt_first_condition = 59
cnt_second_condition = 4
cnt_inner_loop = 4
$$$$$$$$$$$$$$$$$$$$$$
-32768
1498
3890
3745
4340
4569
5072
4115
4874
3941
1214
-282
242
-1102
-3112
-2937
-3570
-2791
-32768
-1437
-1536
-346
1860
2280
4675
4300
5051
6057
4157
4836
2282
1855
1553
4
-771
-2167
-3439
-32768
-3527
-2862
-2853
-1870
-32768
2183
2859
2726
4945
5932
4872
3965
4493
4048
3014
2145
-428
-896
-1257
-2808
-2899
-2662
-3261
-1577
-32768
353

cnt_outer_loop = 64
cnt_first_condition = 59
cnt_second_condition = 5
cnt_inner_loop = 5
$$$$$$$$$$$$$$$$$$$$$$
FFT Test Start
 SAMPLE BUFFER pointer: 0, valid: 127
^  ...    1498   3890   3745   4340   4569   5072   4115   4874   3941   1214   -282    242  -1102  -3112  -2937
  -3570  -2791  -2113  -1437  -1536   -346   1860   2280   4675   4300   5051   6057   4157   4836   2282   1855
   1553      4   -771  -2167  -3439  -3482  -3527  -2862  -2853  -1870    156   2183   2859   2726   4945   5932
   4872   3965   4493   4048   3014   2145   -428   -896  -1257  -2808  -2899  -2662  -3261  -1577   -612    353
|   925   1498   3890   3745   4340   4569   5072   4115   4874   3941   1214   -282    242  -1102  -3112  -2937
  -3570  -2791  -2113  -1437  -1536   -346   1860   2280   4675   4300   5051   6057   4157   4836   2282   1855
   1553      4   -771  -2167  -3439  -3482  -3527  -2862  -2853  -1870    156   2183   2859   2726   4945   5932
   4872   3965   4493   4048   3014   2145   -428   -896  -1257  -2808  -2899  -2662  -3261  -1577   -612    353

0: 4800 = |4829 + 0 i|
1: 256 = |292 + 130 i|
2: 192 = |31 + 245 i|
3: 10304 = |-276 + -10310 i|
4: 384 = |153 + 369 i|
5: 192 = |-68 + 191 i|
6: 128 = |128 + -65 i|
7: 640 = |255 + 595 i|
8: 192 = |46 + -203 i|
9: 64 = |-114 + 17 i|
10: 192 = |190 + -106 i|
11: 0 = |30 + 1 i|
12: 256 = |-280 + -50 i|
13: 896 = |-688 + 656 i|
14: 128 = |-59 + -153 i|
15: 448 = |465 + -48 i|
16: 256 = |7 + 256 i|
17: 448 = |-404 + -256 i|
18: 192 = |-202 + -157 i|
19: 512 = |-381 + 405 i|
20: 384 = |-252 + 359 i|
21: 128 = |99 + -92 i|
22: 448 = |389 + -332 i|
23: 64 = |-15 + 78 i|
24: 384 = |393 + 190 i|
25: 256 = |-265 + 31 i|
26: 512 = |263 + 498 i|
27: 320 = |-143 + -310 i|
28: 256 = |-139 + 278 i|
29: 320 = |242 + 238 i|
30: 128 = |-21 + 165 i|
31: 128 = |172 + 50 i|
32: 0 = |-19 + 0 i|
33: 128 = |173 + -52 i|
34: 128 = |-21 + -166 i|
35: 320 = |243 + -239 i|
36: 256 = |-138 + -279 i|
37: 320 = |-143 + 308 i|
38: 512 = |263 + -499 i|
39: 256 = |-265 + -32 i|
40: 384 = |393 + -191 i|
41: 64 = |-15 + -79 i|
42: 448 = |389 + 330 i|
43: 64 = |100 + 90 i|
44: 384 = |-252 + -361 i|
45: 512 = |-381 + -407 i|
46: 192 = |-201 + 156 i|
47: 448 = |-403 + 254 i|
48: 256 = |7 + -257 i|
49: 448 = |466 + 47 i|
50: 128 = |-57 + 151 i|
51: 896 = |-688 + -657 i|
52: 256 = |-280 + 49 i|
53: 0 = |31 + -2 i|
54: 192 = |190 + 104 i|
55: 64 = |-113 + -19 i|
56: 192 = |46 + 202 i|
57: 640 = |256 + -598 i|
58: 128 = |128 + 63 i|
59: 192 = |-67 + -193 i|
60: 384 = |154 + -371 i|
61: 10304 = |-274 + 10306 i|
62: 192 = |32 + -248 i|
63: 256 = |293 + -134 i|
******************************************************************************
--- Add half of data samples to the input (too few samples)                ---
******************************************************************************
-32768
1498
3890
3745
4340
4569
5072
4115
4874
3941
1214
-282
242
-1102
-3112
-2937
-3570
-2791
-32768
-1437
-1536
-346
1860
2280
4675
4300
5051
6057
4157
4836
2282
1855

cnt_outer_loop = 32
cnt_first_condition = 30
cnt_second_condition = 1
cnt_inner_loop = 1
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: too few valid samples
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000

cnt_outer_loop = 32
cnt_first_condition = 32
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: too few valid samples
******************************************************************************
--- Add other half of data samples to the input (first: missing 1 sample, second generator ok) ---
******************************************************************************
1553
4
-771
-2167
-3439
-32768
-3527
-2862
-2853
-1870
-32768
2183
2859
2726
4945
5932
4872
3965
4493
4048
3014
2145
-428
-896
-1257
-2808
-2899
-2662
-3261
-1577
-32768
353

cnt_outer_loop = 32
cnt_first_condition = 29
cnt_second_condition = 3
cnt_inner_loop = 3
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: too few valid samples
0
0
0
0
-32768
0
0
0
0
0
0
0
0
0
0
-32768
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000

cnt_outer_loop = 32
cnt_first_condition = 30
cnt_second_condition = 2
cnt_inner_loop = 2
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: status ok
******************************************************************************
--- Add first half of data samples to the input again (both generators ok) ---
******************************************************************************
-32768
1498
3890
3745
4340
4569
5072
4115
4874
3941
1214
-282
242
-1102
-3112
-2937
-3570
-2791
-32768
-1437
-1536
-346
1860
2280
4675
4300
5051
6057
4157
4836
2282
1855

cnt_outer_loop = 32
cnt_first_condition = 30
cnt_second_condition = 2
cnt_inner_loop = 2
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: status ok
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000

cnt_outer_loop = 32
cnt_first_condition = 32
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: status ok
******************************************************************************
--- Add 10 more data samples to the input (both generators ok)             ---
******************************************************************************
1553
4
-771
-2167
-3439
-32768
-3527
-2862
-2853
-1870

cnt_outer_loop = 10
cnt_first_condition = 9
cnt_second_condition = 1
cnt_inner_loop = 1
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: status ok
0
0
0
0
-32768
0
0
0
0
0

cnt_outer_loop = 10
cnt_first_condition = 9
cnt_second_condition = 1
cnt_inner_loop = 1
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: status ok
******************************************************************************
--- Constant signal (0) (Both generators broken)                           ---
******************************************************************************
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: bad spectrum
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: bad spectrum
******************************************************************************
--- Constant signal (2.00) (Both generators broken)                        ---
******************************************************************************
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: bad spectrum
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192
8192

cnt_outer_loop = 64
cnt_first_condition = 64
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: bad spectrum
******************************************************************************
--- Add both test data samples to the input (Both generators ok)           ---
******************************************************************************
-32768
1498
3890
3745
4340
4569
5072
4115
4874
3941
1214
-282
242
-1102
-3112
-2937
-3570
-2791
-32768
-1437
-1536
-346
1860
2280
4675
4300
5051
6057
4157
4836
2282
1855
1553
4
-771
-2167
-3439
-32768
-3527
-2862
-2853
-1870
-32768
2183
2859
2726
4945
5932
4872
3965
4493
4048
3014
2145
-428
-896
-1257
-2808
-2899
-2662
-3261
-1577
-32768
353

cnt_outer_loop = 64
cnt_first_condition = 59
cnt_second_condition = 5
cnt_inner_loop = 5
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: status ok
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
0
0
0
0
-32768
0
0
0
0
0
0
0
0
0
0
-32768
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000

cnt_outer_loop = 64
cnt_first_condition = 62
cnt_second_condition = 2
cnt_inner_loop = 2
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: status ok
******************************************************************************
--- Add first half of samples of other generator (Both generators broken)  ---
******************************************************************************
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000

cnt_outer_loop = 32
cnt_first_condition = 32
cnt_second_condition = 0
cnt_inner_loop = 0
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: bad spectrum
-32768
1498
3890
3745
4340
4569
5072
4115
4874
3941
1214
-282
242
-1102
-3112
-2937
-3570
-2791
-32768
-1437
-1536
-346
1860
2280
4675
4300
5051
6057
4157
4836
2282
1855

cnt_outer_loop = 32
cnt_first_condition = 30
cnt_second_condition = 2
cnt_inner_loop = 2
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: bad spectrum
******************************************************************************
--- Add other samples from other generator (Both generators broken)        ---
******************************************************************************
0
0
0
0
-32768
0
0
0
0
0
0
0
0
0
0
-32768
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000

cnt_outer_loop = 32
cnt_first_condition = 30
cnt_second_condition = 2
cnt_inner_loop = 2
$$$$$$$$$$$$$$$$$$$$$$
Generator status 0: bad spectrum
1553
4
-771
-2167
-3439
-32768
-3527
-2862
-2853
-1870
-32768
2183
2859
2726
4945
5932
4872
3965
4493
4048
3014
2145
-428
-896
-1257
-2808
-2899
-2662
-3261
-1577
-32768
353

cnt_outer_loop = 32
cnt_first_condition = 29
cnt_second_condition = 3
cnt_inner_loop = 3
$$$$$$$$$$$$$$$$$$$$$$
Generator status 1: bad spectrum
Check value: 8504350598851399521
